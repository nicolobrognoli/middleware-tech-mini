package DoodleProject;


/**
* DoodleProject/_DoodleStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Doodle.idl
* luned√¨ 4 giugno 2012 15.44.47 CEST
*/

public class _DoodleStub extends org.omg.CORBA.portable.ObjectImpl implements DoodleProject.Doodle
{

  public String[] getChoices ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getChoices", true);
                $in = _invoke ($out);
                String $result[] = DoodleProject.listStringHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getChoices (        );
            } finally {
                _releaseReply ($in);
            }
  } // getChoices

  public void addChoice (String choice)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addChoice", true);
                $out.write_string (choice);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addChoice (choice        );
            } finally {
                _releaseReply ($in);
            }
  } // addChoice

  public int vote (DoodleProject.DoodleClient client, String choice) throws DoodleProject.UserAlreadyVoted
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("vote", true);
                DoodleProject.DoodleClientHelper.write ($out, client);
                $out.write_string (choice);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:DoodleProject/UserAlreadyVoted:1.0"))
                    throw DoodleProject.UserAlreadyVotedHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return vote (client, choice        );
            } finally {
                _releaseReply ($in);
            }
  } // vote

  public DoodleProject.DoodleDetails details ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_details", true);
                $in = _invoke ($out);
                DoodleProject.DoodleDetails $result = DoodleProject.DoodleDetailsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return details (        );
            } finally {
                _releaseReply ($in);
            }
  } // details

  public String _toString ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("toString", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return _toString (        );
            } finally {
                _releaseReply ($in);
            }
  } // _toString

  public int[] calculateWinner ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("calculateWinner", true);
                $in = _invoke ($out);
                int $result[] = DoodleProject.listIntegerHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return calculateWinner (        );
            } finally {
                _releaseReply ($in);
            }
  } // calculateWinner

  public String[] getVotingClients ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getVotingClients", true);
                $in = _invoke ($out);
                String $result[] = DoodleProject.listStringHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getVotingClients (        );
            } finally {
                _releaseReply ($in);
            }
  } // getVotingClients

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:DoodleProject/Doodle:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _DoodleStub
